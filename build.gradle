/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'test' at '17-3-21 下午6:19' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

apply plugin: DateAndTimePlugin

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
   jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
}

task helloWorld<<{
  println "hello world!"
}

task helloWorldTwo {

    doLast {
      println 'helloWorldTwo'}
          println 'this is the second one'
    doFirst {
       println 'helloWorldThree'}

}

task helloWorldThree {
   doFirst {
      println 'helloWorldThree'}
}

task copyFile(type:Copy){
  from "src"
  into "dst"
}

task showTask{
	println tasks.class
	println tasks.size()
}

tasks.create(name: 'hello4')<<{
	description = "this is hello4"
	println 'hello4'
	println description
	
	
	
}


task hello5(dependsOn:hello4)<<{
	println 'hello5'
	println description
}

hello5.configure{
	description = "this is hello5"
}

task hello6 <<{
	println 'hello6'
}

hello6{
	description = "this is hello6"
}

hello6.dependsOn hello5

task combineFileContentNonIncremental{
	def sources = fileTree('src')
	
	def destination = file('destination.txt')
	
	inputs.dir sources
	outputs.file destination
	
	doLast{
		destination.withPrintWriter{ writer ->
			sources.each{source ->
				writer.println source.text
			
			}
			
		}
	}
}


version = "this is the project version"
description = "this is the project description"

task showProjectProperties<<{
	println version
	println project.description
}

ext.property0='this is property0'
ext{
	property1 = 'this is property1'
}

task showProperties{
	doFirst{
		println property0
		println property1
	}
}

task showCommendProperty<<{
	println property2
}

class HelloWorldTask extends DefaultTask{
	@Optional
	String message = 'I am davenkin'
	
	@TaskAction
	def hello(){
		println "hello world $message"
	}
}

task hello(type:HelloWorldTask)


class DateAndTimePlugin implements Plugin<Project>{
	void apply(Project project){
		project.extensions.create("dateAndTime",DateAndTimePluginExtension)
		project.task('showTime')<<{
			println "Current time is"+new Date().format(project.dateAndTime.timeFormat)
		}
		
		project.task('showDate')<<{
			println "Current date is"+new Date().format(project.dateAndTime.dateFormat)
		}
	}
}

class DateAndTimePluginExtension{
	String timeFormat = "MM/dd/yyyyHH:mm:ss.SSS"
	String dateFormat = "yyyy-MM-dd"
}
